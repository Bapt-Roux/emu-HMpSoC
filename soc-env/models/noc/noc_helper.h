/*
 * Copyright (c) 2016 Baptiste Roux.
 * email: <baptiste.roux AT inria.fr>.
 */

/*
 * File: nocIpc_helper.h
 * NoC structure definition for use in NoC implementation and NoC utilization
 */

#ifndef _NOC_HELPER
#define _NOC_HELPER
// Ipc header
#include <cstdint>
#include <unistd.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <sys/un.h>
// inet socket
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <stdio.h>
#include <map>

namespace noc {
#include "noc_hw.h"
  typedef struct sockaddr_in sockaddrInet;
/*
 * helper for NoC packets header
 */
static const std::map<ack_t,std::string> ack_helper = {{NACK,"NACK"},{RCV_ACK,"RCV_ACK"},{PRC_ACK,"PRC_ACK"}};
static const std::map<order_t,std::string> order_helper = {{NOC_JOBASK,"NOC_JOBASK"},{NOC_MEMGET,"NOC_MEMGET"},
                                                           {NOC_MEMRTV,"NOC_MEMRTV"},{NOC_JOBSYNC,"NOC_JOBSYNC"},
                                                           {NOC_ACK,"NOC_ACK"}};

//Explanation of NoC flags mecanism:
// |-------------++----------+----------+----------+---------------------------------------------------------|
// |             ||            Ack_type            | comments                                                |
// |-------------++----------+----------+----------+---------------------------------------------------------|
// | order_type  || NACK     | RCV      | PRC      |                                                         |
// |-------------++----------+----------+----------+---------------------------------------------------------|
// | NOC_JOBASK  || X        | 0        | X        | Ask target to subscribe to a new job                    |
// |-------------++----------+----------+----------+---------------------------------------------------------|
// | NOC_MEMGET  || 0        | X        | X        | Ask target to retrieve a segment of memory              |
// |-------------++----------+----------+----------+---------------------------------------------------------|
// | NOC_MEMRTV  || 0        | 0        | X        | Retrieve a segment of memory from another cluster       |
// |-------------++----------+----------+----------+---------------------------------------------------------|
// | NOC_JOBSYNC || X        | O        | X        | Register a waitPoint                                    |
// |-------------++----------+----------+----------+---------------------------------------------------------|
// | NOC_ACK     || 0        | 0        | 0        | Send ack over the network, this cmd not subject to ack  |
// |             ||          |          |          | (an ack send not waiting for ack => else infinite loop) |
// |-------------++----------+----------+----------+---------------------------------------------------------|


 enum nocType {RING, MESH_2D, TORUS_2D};
 static const std::map<nocType,std::string> nocType_helper = {{RING,"RING"},{MESH_2D,"MESH_2D"},{TORUS_2D,"TORUS_2D"}};

/*** RING :
 +----------------------------------------------------------------+
|    +-----+       +-----+       +-----+       +-----+           |
+---->[0,0]+-----+ |[0,1]+-----+ |[0,2]+-----+ |[0,3]+-----+     |
     +-----+       +-----+       +-----+       +-----+     |     |
                                                           |     |
+----------------------------------------------------------+     |
|    +-----+       +-----+       +-----+       +-----+           |
+--> |[1,0]+-----+ |[1,1]+-----+ |[1,2]+-----+ |[1,3]+-----+     |
     +-----+       +-----+       +-----+       +-----+     |     |
                                                           |     |
+----------------------------------------------------------+     |
|    +-----+       +-----+       +-----+       +-----+           |
+--> |[2,0]+-----+ |[2,1]+-----+ |[2,2]+-----+ |[2,3]+-----+     |
     +-----+       +-----+       +-----+       +-----+     |     |
                                                           |     |
+----------------------------------------------------------+     |
|    +-----+       +-----+       +-----+       +-----+           |
+--> |[3,0]+-----+ |[3,1]+-----+ |[3,2]+-----+ |[3,3]+-----------+
     +-----+       +-----+       +-----+       +-----+          */

/*** MESH 2D:
 +-----+       +-----+       +-----+       +-----+
 |[0,0]+-----+ |[0,1]+-----+ |[0,2]+-----+ |[0,3]|
 +--+--+       +--+--+       +--+--+       +--+--+
 |             |             |             |
 |             |             |             |
 +--+--+       +--+--+       +--+--+       +--+--+
 |[1,0]+-----+ |[1,1]+-----+ |[1,2]+-----+ |[1,3]|
 +--+--+       +--+--+       +--+--+       +--+--+
 |             |             |             |
 |             |             |             |
 +--+--+       +--+--+       +--+--+       +--+--+
 |[2,0]+-----+ |[2,1]+-----+ |[2,2]+-----+ |[2,3]|
 +--+--+       +--+--+       +--+--+       +--+--+
 |             |             |             |
 |             |             |             |
 +--+--+       +--+--+       +--+--+       +--+--+
 |[3,0]+-----+ |[3,1]+-----+ |[3,2]+-----+ |[3,3]|
 +-----+       +-----+       +-----+       +-----+    */

 /*** TORUS 2D:
 +-------+      +------+      +------+      +------+
|    +-----+    |  +-----+    |  +-----+    |  +-----+
|  +-+[0,0]+-----+ |[0,1]+-----+ |[0,2]+-----+ |[0,3]+-+
|  | +--+--+       +--+--+       +--+--+       +--+--+ |
|  +... |    ...|     |    ...|     |    ...|     | ...+
|       |       |     |       |     |       |     |
|    +--+--+       +--+--+       +--+--+       +--+--+
|  +-+[1,0]+-----+ |[1,1]+-----+ |[1,2]+-----+ |[1,3]+-+
|  | +--+--+       +--+--+       +--+--+       +--+--+ |
|  +... |    ...|     |    ...|     |    ...|     | ...+
|       |       |     |       |     |       |     |
|    +--+--+       +--+--+       +--+--+       +--+--+
|  +-+[2,0]+-----+ |[2,1]+-----+ |[2,2]+-----+ |[2,3]+-+
|  | +--+--+       +--+--+       +--+--+       +--+--+ |
|  +... |    ...|     |    ...|     |    ...|     | ...+
|       |       |     |       |     |       |     |
|    +--+--+       +--+--+       +--+--+       +--+--+
|  +-+[3,0]+-----+ |[3,1]+-----+ |[3,2]+-----+ |[3,3]+-+
|  | +-----+    |  +-----+    |  +-----+    |  +-----+ |
+-------|       +-----|       +-----|       +-----|    |
   +...................................................+ */
}// end namespace ipc

#endif /*_NOC_HELPER*/
